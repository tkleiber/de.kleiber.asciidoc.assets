<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.kleiber</groupId>
  <artifactId>asciidoc.assets</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Assets for generation of Asciidoc</name>
  <description>Assets for generation of Asciidoc, build from https://github.com/asciidoctor/asciidoctor-maven-examples</description>

  <properties>
    <adoc.skip>false</adoc.skip>
    <project.slides.directory>${project.build.directory}/generated-slides</project.slides.directory>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>

    <!-- Maven Plugin Versions -->
    <asciidoctor.maven.plugin.version>2.2.3</asciidoctor.maven.plugin.version>
    <asciidoctorj.pdf.version>2.3.6</asciidoctorj.pdf.version>
    <asciidoctorj.diagram.version>2.2.9</asciidoctorj.diagram.version>
    <download.maven.plugin.version>1.6.8</download.maven.plugin.version>
    <asciidoctorj.version>2.5.7</asciidoctorj.version>
    <jruby.version>9.4.2.0</jruby.version>
    <!-- revealjs.version 4.0.0 bricht die korrekte Anzeige meiner Templates -->
    <revealjs.version>3.9.2</revealjs.version>
    <!-- Use 'master' as version and remove the 'v' prefixing the download url to use the current snapshot version  -->
    <asciidoctor-revealjs.version>4.1.0</asciidoctor-revealjs.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>rubygems</groupId>
      <artifactId>asciidoctor-revealjs</artifactId>
      <version>4.1.0</version>
      <type>gem</type>
      <!-- Avoid downloading gems included in AsciidoctorJ -->
      <exclusions>
        <exclusion>
          <groupId>rubygems</groupId>
          <artifactId>asciidoctor</artifactId>
        </exclusion>
        <exclusion>
          <groupId>rubygems</groupId>
          <artifactId>thread_safe</artifactId>
        </exclusion>
        <exclusion>
          <groupId>rubygems</groupId>
          <artifactId>concurrent-ruby</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>process-resources</defaultGoal>
    <extensions>
      <extension> <!-- this allows us to download gems -->
        <groupId>org.torquebox.mojo</groupId>
        <artifactId>mavengem-wagon</artifactId>
        <version>1.0.3</version>
      </extension>
    </extensions>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.6.3</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <version>${download.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>install-revealjs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://github.com/hakimel/reveal.js/archive/${revealjs.version}.zip</url>
              <unpack>true</unpack>
              <outputFileName>reveal.js-${revealjs.version}.zip</outputFileName>
              <outputDirectory>${project.slides.directory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>de.saumya.mojo</groupId>
        <artifactId>gem-maven-plugin</artifactId>
        <version>2.0.1</version>
        <configuration>
          <jrubyVersion>${jruby.version}</jrubyVersion>
          <gemHome>${project.build.directory}/gems</gemHome>
          <gemPath>${project.build.directory}/gems</gemPath>
        </configuration>
        <executions>
          <!-- Install required gems in target directory -->
          <execution>
            <id>install-gems</id>
            <goals>
              <goal>initialize</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>${asciidoctor.maven.plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctorj-pdf</artifactId>
            <version>${asciidoctorj.pdf.version}</version>
          </dependency>
          <dependency>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctorj-diagram</artifactId>
            <version>${asciidoctorj.diagram.version}</version>
          </dependency>
          <!-- Comment this section to use the default jruby artifact provided by the plugin -->
          <dependency>
            <groupId>org.jruby</groupId>
            <artifactId>jruby-complete</artifactId>
            <version>${jruby.version}</version>
          </dependency>
          <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
          <dependency>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctorj</artifactId>
            <version>${asciidoctorj.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <sourceDirectory>src/main/asciidoc</sourceDirectory>
          <!-- If you set baseDir to ${project.basedir}, top-level includes are resolved relative to the project root -->
          <!--
          <baseDir>${project.basedir}</baseDir>
          -->
          <!-- Attributes common to all output formats -->
          <attributes>
            <icons>font</icons><!-- for Font Awesome icons -->
            <idseparator>-</idseparator>
            <idprefix />
            <experimental/><!-- kbd / menu / btn macros -->
            <project-version>${project.version}</project-version>
            <plantuml-config>assets/themes/plantuml.cfg</plantuml-config>
            <sourcedir>${project.build.sourceDirectory}</sourcedir>
          </attributes>
        </configuration>
        <executions>
          <execution>
            <id>generate-slides</id>
            <phase>process-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <!-- include the asciidoctor-revealjs gem -->
              <gemPath>${project.build.directory}/gems</gemPath>
              <requires>
                <require>asciidoctor-diagram</require>
                <require>asciidoctor-revealjs</require>
              </requires>
              <outputDirectory>${project.slides.directory}</outputDirectory>
              <backend>revealjs</backend>
              <attributes>
                <!--
                    As we are downloading reveal.js in runtime, it sits in a nonstandard folder `reveal.js-${revealjs.version}`
                -->
                <revealjsdir>reveal.js-${revealjs.version}</revealjsdir>
                <!-- put here the reveal.js specific attributes -->
                <revealjs_customtheme>assets/themes/css/reveal-tkleiber-dark.css</revealjs_customtheme>
                <!-- none, fade, slide, convex, concave, zoom -->
                <!-- dynamic : PRES-asciidoc.html?transition=convex -->
                <revealjs_transition>none</revealjs_transition>
                <!-- can use any pygments/rouge css here -->
                <!--rouge-css>class</rouge-css>
                <customcss>styles/monokai.css</customcss-->
                <source-highlighter>highlight.js</source-highlighter>
                <revealjs_plugins>assets/vendor/revealjs/revealjs-plugins/revealjs-plugins.js</revealjs_plugins>
                <revealjs_plugins_configuration>assets/vendor/revealjs/revealjs-plugins/revealjs-plugins-conf.js</revealjs_plugins_configuration>
                <docinfo>shared</docinfo>
                <toc>macro</toc>
                <toclevels>1</toclevels>
              </attributes>
            </configuration>
          </execution>
          <execution>
            <id>asciidoc-to-html</id>
            <phase>process-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <requires>
                <require>asciidoctor-diagram</require>
              </requires>
              <backend>html5</backend>
              <!--
              Scenarios for linking vs embedding assets:

              Link to both stylesheets and images::

                - don't set embedAssets option
                - set linkcss attribute to true
                - set imagesdir attribute to path relative to AsciiDoc source file

                <attributes>
                    <linkcss>true</linkcss>
                    <imagesdir>./images</imagesdir>
                </attributes>

              Embed stylesheets and images::

                - set embedAssets option to true
                - don't set linkcss attribute
                - set imagesdir attribute to path relative to project root

                <embedAssets>true</embedAssets>
                <attributes>
                    <imagesdir>src/docs/asciidoc/images</imagesdir>
                </attributes>

              Link to stylesheets but embed images::

                - set embedAssets option to true
                - set linkcss attribute to true
                - set imagesdir attribute to path relative to project root

                <embedAssets>true</embedAssets>
                <attributes>
                    <linkcss>true</linkcss>
                    <imagesdir>src/docs/asciidoc/images</imagesdir>
                </attributes>

              Embed stylesheets but link images (default)::

                - don't set embedAssets option
                - don't set linkcss attribute
                - set imagesdir attribute to path relative to AsciiDoc source file

                <attributes>
                    <imagesdir>./images</imagesdir>
                </attributes>

              IMPORTANT: When you enable image embedding, you must qualify the path the the imagesdir, as shown above.
              -->
              <attributes>
                <source-highlighter>highlight.js</source-highlighter>
                <imagesdir>./images</imagesdir>
                <toc>left</toc>
                <toclevels>2</toclevels>
                <sectanchors>true</sectanchors>
                <sectnums/>
                <favicon>assets/themes/favicon.png</favicon>
                <linkcss />
                <stylesheet>html-kleiber.css</stylesheet>
                <stylesdir>assets/themes/css</stylesdir>
                <docinfo1>true</docinfo1>
              </attributes>
            </configuration>
          </execution>
          <execution>
            <id>generate-pdf-doc</id>
            <phase>process-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <requires>
                <require>asciidoctor-diagram</require>
              </requires>
              <backend>pdf</backend>
              <!-- Since 1.5.0-alpha.9 PDF back-end can use 'rouge' as well as 'coderay'
              for source highlighting -->
              <!-- Due to a known issue on windows, it is recommended to use 'coderay' until an new version of 'rouge' is released.
                      see discussions: https://github.com/asciidoctor/asciidoctor-maven-examples/pull/58
                                       https://github.com/asciidoctor/asciidoctorj-pdf/issues/3
                                       https://github.com/jneen/rouge/issues/661
              -->
              <attributes>
                <source-highlighter>rouge</source-highlighter>
                <pagenums/>
                <toc/>
                <toclevels>3</toclevels>
                <sectnums/>
                <pdf-style>${user.dir}/src/main/asciidoc/assets/themes/pdf-theme.yml</pdf-style>
                <pdf-fontsdir>${user.dir}/src/main/asciidoc/assets/themes/fonts/pdf</pdf-fontsdir>
              </attributes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>mavengems</id>
      <url>mavengem:https://rubygems.org</url>
    </repository>
  </repositories>

</project>